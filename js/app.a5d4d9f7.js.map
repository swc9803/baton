{"version":3,"file":"js/app.a5d4d9f7.js","mappings":"oHAEIA,MAAM,QACNC,MAAM,6BACNC,KAAK,OACLC,QAAQ,e,qsWAERC,G,kCANFC,EAAAA,EAAAA,IAqOM,MArONC,EAqOMC,E,aCrOR,MAAMC,EAAS,CAAC,EAKVC,GAA2B,OAAgBD,EAAQ,CAAC,CAAC,SAASE,GAAQ,CAAC,YAAY,qBAEzF,Q,SCNIV,MAAM,QACNC,MAAM,6BACNC,KAAK,OACLC,QAAQ,c,yxCAERC,G,kCANFC,EAAAA,EAAAA,IA8BM,MA9BNC,EA8BMC,E,CC9BR,MAAM,EAAS,CAAC,EAKV,GAA2B,OAAgB,EAAQ,CAAC,CAAC,SAAS,GAAQ,CAAC,YAAY,qBAEzF,Q,SCNIP,MAAM,OACNC,MAAM,6BACNC,KAAK,OACLC,QAAQ,e,k3xBAERC,G,kCANFC,EAAAA,EAAAA,IAgCM,MAhCNC,EAgCMK,E,CChCR,MAAM,EAAS,CAAC,EAGV,GAA2B,OAAgB,EAAQ,CAAC,CAAC,SAAS,KAEpE,Q,sFCcA,MAAMC,GAAUC,EAAAA,EAAAA,MACVC,GAAYD,EAAAA,EAAAA,MAClB,IAAIE,EACAC,EAAS,GAEb,MAAMC,EAAiBA,KACrB,MAAMC,EAAIC,KAAKC,UAAoC,GAAxBN,EAAUO,MAAMC,OACrCC,EACJJ,KAAKC,UAAYN,EAAUO,MAAMG,OAAS,GAAKV,EAAUO,MAAMG,OAAS,EAE1E,MAAO,CAAEN,IAAGK,IAAG,EAEXE,EAAWA,CAACC,EAAMR,EAAGK,KACzB,MAAMI,EAAmC,GAAxBb,EAAUO,MAAMC,MAC3BM,EAAmC,IAAxBd,EAAUO,MAAMC,MAC3BO,EAAqC,GAAzBf,EAAUO,MAAMG,OAC5BM,EAAqC,IAAzBhB,EAAUO,MAAMG,OAElC,IAAIF,EAAOE,EAEX,GAAa,WAATE,EAAmB,CACrB,MAAMK,EAAYZ,KAAKa,IAAIJ,EAAUE,GAAa,EAC5CG,EACJd,KAAKe,MAAMf,KAAKC,UAAYW,EAAYJ,EAAW,IAAMA,EAC3DL,EAAiB,EAATW,EACRT,EAAkB,EAATS,CACX,MACEX,EAAQH,KAAKe,MAAMf,KAAKC,UAAYQ,EAAWD,EAAW,IAAMA,EAChEH,EACEL,KAAKe,MAAMf,KAAKC,UAAYU,EAAYD,EAAY,IAAMA,EAG9D,MAAO,CACLH,OACAR,IACAK,IACAD,QACAE,SACD,EAGGW,EAAeC,IAGnB,GAFArB,EAAIsB,YAEe,WAAfD,EAAMV,KACRX,EAAIuB,KAAKF,EAAMlB,EAAGkB,EAAMb,EAAGa,EAAMd,MAAOc,EAAMZ,aACzC,GAAmB,WAAfY,EAAMV,KACfX,EAAIwB,IACFH,EAAMlB,EAAIkB,EAAMd,MAAQ,EACxBc,EAAMb,EAAIa,EAAMZ,OAAS,EACzBY,EAAMd,MAAQ,EACd,EACA,EAAIH,KAAKqB,SAEN,GAAmB,aAAfJ,EAAMV,KACfX,EAAI0B,OAAOL,EAAMlB,EAAIkB,EAAMd,MAAQ,EAAGc,EAAMb,GAC5CR,EAAI2B,OAAON,EAAMlB,EAAGkB,EAAMb,EAAIa,EAAMZ,QACpCT,EAAI2B,OAAON,EAAMlB,EAAIkB,EAAMd,MAAOc,EAAMb,EAAIa,EAAMZ,QAClDT,EAAI4B,iBACC,GAAmB,UAAfP,EAAMV,KACfX,EAAI0B,OAAOL,EAAMlB,EAAIkB,EAAMd,MAAQ,EAAGc,EAAMb,EAAIa,EAAMZ,OAAS,GAC/DT,EAAI6B,cACFR,EAAMlB,EAAIkB,EAAMd,MAAQ,EACxBc,EAAMb,EACNa,EAAMlB,EACNkB,EAAMb,EAAIa,EAAMZ,OAAS,EACzBY,EAAMlB,EACNkB,EAAMb,EAAIa,EAAMZ,OAAS,GAE3BT,EAAI6B,cACFR,EAAMlB,EACNkB,EAAMb,EAAoB,EAAfa,EAAMZ,OAAc,EAC/BY,EAAMlB,EAAIkB,EAAMd,MAAQ,EACxBc,EAAMb,EAAIa,EAAMZ,OAChBY,EAAMlB,EAAIkB,EAAMd,MAAQ,EACxBc,EAAMb,EAAIa,EAAMZ,QAElBT,EAAI6B,cACFR,EAAMlB,EAAmB,EAAdkB,EAAMd,MAAa,EAC9Bc,EAAMb,EAAIa,EAAMZ,OAChBY,EAAMlB,EAAIkB,EAAMd,MAChBc,EAAMb,EAAoB,EAAfa,EAAMZ,OAAc,EAC/BY,EAAMlB,EAAIkB,EAAMd,MAChBc,EAAMb,EAAIa,EAAMZ,OAAS,GAE3BT,EAAI6B,cACFR,EAAMlB,EAAIkB,EAAMd,MAChBc,EAAMb,EAAIa,EAAMZ,OAAS,EACzBY,EAAMlB,EAAmB,EAAdkB,EAAMd,MAAa,EAC9Bc,EAAMb,EACNa,EAAMlB,EAAIkB,EAAMd,MAAQ,EACxBc,EAAMb,EAAIa,EAAMZ,OAAS,QAEtB,GAAmB,SAAfY,EAAMV,KAAiB,CAChC,MAAMmB,EAAcT,EAAMd,MAAQ,EAC5BwB,EAA4B,GAAdD,EACdE,EAAUX,EAAMlB,EAAIkB,EAAMd,MAAQ,EAClC0B,EAAUZ,EAAMb,EAAIa,EAAMZ,OAAS,EAEzC,IAAIyB,EAAQ9B,KAAKqB,GAAK,EACtB,MAAMU,EAAkB,EAAV/B,KAAKqB,GAAM,GACzBzB,EAAI0B,OAAOM,EAASC,EAAUH,GAE9B,IAAK,IAAIM,EAAI,EAAGA,EAAI,GAAOA,IAAK,CAC9B,MAAMlB,EAASkB,EAAI,IAAM,EAAIN,EAAcC,EACrC5B,EAAI6B,EAAU5B,KAAKiC,IAAIH,GAAShB,EAChCV,EAAIyB,EAAU7B,KAAKkC,IAAIJ,GAAShB,EACtClB,EAAI2B,OAAOxB,EAAGK,GAEd0B,GAASC,CACX,CAEAnC,EAAI4B,WACN,CAGKP,EAAMkB,QACTlB,EAAMkB,MAAS,IAAGnC,KAAKe,MAAsB,SAAhBf,KAAKC,UAAqBmC,SAAS,OAElExC,EAAIyC,UAAYpB,EAAMkB,MACtBvC,EAAIb,OACJa,EAAI0C,SAGJ1C,EAAIsB,YACJtB,EAAI0B,OAAOL,EAAMlB,EAAIkB,EAAMd,MAAQ,EAAGc,EAAMb,EAAIa,EAAMZ,QACtDT,EAAI2B,OAAO5B,EAAUO,MAAMC,MAAQ,EAA4B,GAAzBR,EAAUO,MAAMG,QACtDT,EAAI0C,QAAQ,EAIRC,EAAkBA,CAACC,EAAQC,KAC/B,MAAMC,EAAKF,EAAOzC,EAAIyC,EAAOrC,MAAQ,GAAKsC,EAAO1C,EAAI0C,EAAOtC,MAAQ,GAC9DwC,EAAKH,EAAOpC,EAAIoC,EAAOnC,OAAS,GAAKoC,EAAOrC,EAAIqC,EAAOpC,OAAS,GAChEuC,EAAW5C,KAAK6C,KAAKH,EAAKA,EAAKC,EAAKA,GACpCG,EAAcN,EAAOrC,MAAQ,EAAIsC,EAAOtC,MAAQ,EAEtD,OAAOyC,EAAWE,CAAW,EAEzBC,EAAkBA,CAACP,EAAQC,KAC/B,MAAMC,EAAKF,EAAOzC,EAAIyC,EAAOrC,MAAQ,GAAKsC,EAAO1C,EAAI0C,EAAOtC,MAAQ,GAC9DwC,EAAKH,EAAOpC,EAAIoC,EAAOnC,OAAS,GAAKoC,EAAOrC,EAAIqC,EAAOpC,OAAS,GAChEyB,EAAQ9B,KAAKgD,MAAML,EAAID,GACvBO,EAAcT,EAAOrC,MAAQ,EAAIsC,EAAOtC,MAAQ,EAEhD+C,EACJT,EAAO1C,EAAI0C,EAAOtC,MAAQ,EAAIH,KAAKiC,IAAIH,GAASmB,EAC5CE,EACJV,EAAOrC,EAAIqC,EAAOpC,OAAS,EAAIL,KAAKkC,IAAIJ,GAASmB,EAE7CG,EAGA,GAFJpD,KAAK6C,KACH7C,KAAKqD,IAAIb,EAAOzC,EAAImD,EAAY,GAAKlD,KAAKqD,IAAIb,EAAOpC,EAAI+C,EAAY,IAGpEX,EAAOc,WACVC,EAAAA,GAAKC,GAAGhB,EAAQ,CACdzC,EAAGmD,EAAaV,EAAOrC,MAAQ,EAC/BC,EAAG+C,EAAaX,EAAOnC,OAAS,EAChCoD,SAAUL,GAEd,EAIIM,EAAgBA,KACpB,MAAMC,EAAa,CAAC,SAAU,SAAU,WAAY,QAAS,SACvD,EAAE5D,EAAC,EAAEK,GAAMN,IACXS,EAAOoD,EAAW3D,KAAKe,MAAMf,KAAKC,SAAW0D,EAAWC,SACxD3C,EAAQX,EAASC,EAAMR,EAAGK,GAChCP,EAAOgE,KAAK5C,GAEZA,EAAMqC,WAAY,EAClBC,EAAAA,GAAKC,GAAGvC,EAAO,CACbb,EAAGmD,EAAAA,GAAKO,MAAM7D,OAAO,GAAIN,EAAUO,MAAMG,OAAS,GAClDoD,SAAU,EACVM,KAAM,SACNC,WAAYA,KACVT,EAAAA,GAAKC,GAAGvC,EAAO,CACbb,EAAG,OACH2D,KAAM,OACNN,SAAU,EACVQ,MAAM,EACNC,QAAS,IAEXjD,EAAMqC,WAAY,CAAK,IAG3BC,EAAAA,GAAKY,KAAKlD,EAAO,CACfd,MAAO,EACPE,OAAQ,EACR0D,KAAM,SACNN,SAAU,KACV,EAIEW,EAAiBC,IACrB,MAAMC,EAAa3E,EAAUO,MAAMqE,wBAC7BC,EAASH,EAAEI,QAAUH,EAAWI,KAChCC,EAASN,EAAEO,QAAUN,EAAWO,IAEtC,IAAIC,EAAiB,KAErBjF,EAAOkF,SAAS9D,IAEZuD,GAAUvD,EAAMlB,GAChByE,GAAUvD,EAAMlB,EAAIkB,EAAMd,OAC1BwE,GAAU1D,EAAMb,GAChBuE,GAAU1D,EAAMb,EAAIa,EAAMZ,SACzBY,EAAMqC,YAEPrC,EAAMqC,WAAY,IACbwB,GAAkB7D,EAAMb,EAAI0E,EAAe1E,KAC9C0E,EAAiB7D,GAErB,IAGE6D,IACFvB,EAAAA,GAAKyB,aAAaF,GAClBvB,EAAAA,GAAKC,GAAGsB,EAAgB,CACtB1E,GAAIT,EAAUO,MAAMG,OAAS,EAC7BoD,SAAU,EACVM,KAAM,YACNC,WAAYA,KACVnE,EAASA,EAAOoF,QAAQC,GAAMA,IAAMJ,GAAe,IAGzD,EAGIK,EAAUA,KACdvF,EAAIwF,UAAU,EAAG,EAAGzF,EAAUO,MAAMC,MAAOR,EAAUO,MAAMG,QAE3DR,EAAOkF,SAAQ,CAAC9D,EAAOoE,KACrBrE,EAAYC,GAGZ,IAAK,IAAIe,EAAIqD,EAAQ,EAAGrD,EAAInC,EAAO+D,OAAQ5B,IAAK,CAC9C,MAAMsD,EAAazF,EAAOmC,GACtBO,EAAgBtB,EAAOqE,IACzBvC,EAAgB9B,EAAOqE,EAE3B,KAGFC,sBAAsBJ,EAAQ,EAG1BK,EAAWA,KACf7F,EAAUO,MAAMC,MAAQsF,OAAOC,WAC/B/F,EAAUO,MAAMG,OAASoF,OAAOE,YAChC9F,EAAS,EAAE,E,OAGb+F,EAAAA,EAAAA,KAAU,KACRhG,EAAMD,EAAUO,MAAM2F,WAAW,MAEjCL,IACAL,IAEA5B,EAAAA,GAAKC,GAAG/D,EAAQS,MAAO,CACrB4F,MAAO,IACPC,gBAAiB,gBACjB9B,MAAM,EACNF,KAAM,eACNG,QAAS,EACTT,SAAU,IAGZ9D,EAAUO,MAAM8F,iBAAiB,QAAS5B,GAC1CqB,OAAOO,iBAAiB,SAAUR,EAAS,I,8SC/R7C,MAAM,EAAc,EAEpB,SCJAS,EAAAA,EAAAA,IAAUC,GAAKC,MAAM,O,GCFjBC,EAA2B,CAAC,EAGhC,SAASC,EAAoBC,GAE5B,IAAIC,EAAeH,EAAyBE,GAC5C,QAAqBE,IAAjBD,EACH,OAAOA,EAAaE,QAGrB,IAAIC,EAASN,EAAyBE,GAAY,CAGjDG,QAAS,CAAC,GAOX,OAHAE,EAAoBL,GAAUM,KAAKF,EAAOD,QAASC,EAAQA,EAAOD,QAASJ,GAGpEK,EAAOD,OACf,CAGAJ,EAAoBQ,EAAIF,E,WCzBxB,IAAIG,EAAW,GACfT,EAAoBU,EAAI,SAASC,EAAQC,EAAUC,EAAIC,GACtD,IAAGF,EAAH,CAMA,IAAIG,EAAeC,IACnB,IAASrF,EAAI,EAAGA,EAAI8E,EAASlD,OAAQ5B,IAAK,CACrCiF,EAAWH,EAAS9E,GAAG,GACvBkF,EAAKJ,EAAS9E,GAAG,GACjBmF,EAAWL,EAAS9E,GAAG,GAE3B,IAJA,IAGIsF,GAAY,EACPC,EAAI,EAAGA,EAAIN,EAASrD,OAAQ2D,MACpB,EAAXJ,GAAsBC,GAAgBD,IAAaK,OAAOC,KAAKpB,EAAoBU,GAAGW,OAAM,SAASC,GAAO,OAAOtB,EAAoBU,EAAEY,GAAKV,EAASM,GAAK,IAChKN,EAASW,OAAOL,IAAK,IAErBD,GAAY,EACTH,EAAWC,IAAcA,EAAeD,IAG7C,GAAGG,EAAW,CACbR,EAASc,OAAO5F,IAAK,GACrB,IAAI6F,EAAIX,SACEV,IAANqB,IAAiBb,EAASa,EAC/B,CACD,CACA,OAAOb,CArBP,CAJCG,EAAWA,GAAY,EACvB,IAAI,IAAInF,EAAI8E,EAASlD,OAAQ5B,EAAI,GAAK8E,EAAS9E,EAAI,GAAG,GAAKmF,EAAUnF,IAAK8E,EAAS9E,GAAK8E,EAAS9E,EAAI,GACrG8E,EAAS9E,GAAK,CAACiF,EAAUC,EAAIC,EAwB/B,C,eC5BAd,EAAoByB,EAAI,SAASpB,GAChC,IAAIqB,EAASrB,GAAUA,EAAOsB,WAC7B,WAAa,OAAOtB,EAAO,UAAY,EACvC,WAAa,OAAOA,CAAQ,EAE7B,OADAL,EAAoB4B,EAAEF,EAAQ,CAAEG,EAAGH,IAC5BA,CACR,C,eCNA1B,EAAoB4B,EAAI,SAASxB,EAAS0B,GACzC,IAAI,IAAIR,KAAOQ,EACX9B,EAAoB+B,EAAED,EAAYR,KAAStB,EAAoB+B,EAAE3B,EAASkB,IAC5EH,OAAOa,eAAe5B,EAASkB,EAAK,CAAEW,YAAY,EAAMC,IAAKJ,EAAWR,IAG3E,C,eCPAtB,EAAoBmC,EAAI,WACvB,GAA0B,kBAAfC,WAAyB,OAAOA,WAC3C,IACC,OAAOC,MAAQ,IAAIC,SAAS,cAAb,EAChB,CAAE,MAAOtE,GACR,GAAsB,kBAAXoB,OAAqB,OAAOA,MACxC,CACA,CAPuB,E,eCAxBY,EAAoB+B,EAAI,SAASQ,EAAKC,GAAQ,OAAOrB,OAAOsB,UAAUC,eAAenC,KAAKgC,EAAKC,EAAO,C,eCKtG,IAAIG,EAAkB,CACrB,IAAK,GAaN3C,EAAoBU,EAAEQ,EAAI,SAAS0B,GAAW,OAAoC,IAA7BD,EAAgBC,EAAgB,EAGrF,IAAIC,EAAuB,SAASC,EAA4BC,GAC/D,IAKI9C,EAAU2C,EALVhC,EAAWmC,EAAK,GAChBC,EAAcD,EAAK,GACnBE,EAAUF,EAAK,GAGIpH,EAAI,EAC3B,GAAGiF,EAASsC,MAAK,SAASC,GAAM,OAA+B,IAAxBR,EAAgBQ,EAAW,IAAI,CACrE,IAAIlD,KAAY+C,EACZhD,EAAoB+B,EAAEiB,EAAa/C,KACrCD,EAAoBQ,EAAEP,GAAY+C,EAAY/C,IAGhD,GAAGgD,EAAS,IAAItC,EAASsC,EAAQjD,EAClC,CAEA,IADG8C,GAA4BA,EAA2BC,GACrDpH,EAAIiF,EAASrD,OAAQ5B,IACzBiH,EAAUhC,EAASjF,GAChBqE,EAAoB+B,EAAEY,EAAiBC,IAAYD,EAAgBC,IACrED,EAAgBC,GAAS,KAE1BD,EAAgBC,GAAW,EAE5B,OAAO5C,EAAoBU,EAAEC,EAC9B,EAEIyC,EAAqBC,KAAK,qBAAuBA,KAAK,sBAAwB,GAClFD,EAAmB1E,QAAQmE,EAAqBS,KAAK,KAAM,IAC3DF,EAAmB5F,KAAOqF,EAAqBS,KAAK,KAAMF,EAAmB5F,KAAK8F,KAAKF,G,IC/CvF,IAAIG,EAAsBvD,EAAoBU,OAAEP,EAAW,CAAC,MAAM,WAAa,OAAOH,EAAoB,KAAO,IACjHuD,EAAsBvD,EAAoBU,EAAE6C,E","sources":["webpack://baton/./src/components/House.vue","webpack://baton/./src/components/House.vue?5ef5","webpack://baton/./src/components/Cloud.vue","webpack://baton/./src/components/Cloud.vue?a11c","webpack://baton/./src/components/Sale.vue","webpack://baton/./src/components/Sale.vue?e7d8","webpack://baton/./src/App.vue","webpack://baton/./src/App.vue?7ccd","webpack://baton/./src/main.js","webpack://baton/webpack/bootstrap","webpack://baton/webpack/runtime/chunk loaded","webpack://baton/webpack/runtime/compat get default export","webpack://baton/webpack/runtime/define property getters","webpack://baton/webpack/runtime/global","webpack://baton/webpack/runtime/hasOwnProperty shorthand","webpack://baton/webpack/runtime/jsonp chunk loading","webpack://baton/webpack/startup"],"sourcesContent":["<template>\n  <svg\n    class=\"house\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n    fill=\"none\"\n    viewBox=\"0 0 232 154\"\n  >\n    <g clip-path=\"url(#clip0_4_362)\">\n      <path\n        fill=\"#021728\"\n        fill-rule=\"evenodd\"\n        d=\"M191.623 121.849c2.507-.379 4.852 1.273 5.363 3.725.135-.041.274-.073.419-.095.964-.145 1.888.192 2.528.832.808-.953 1.951-1.631 3.284-1.832 2.924-.441 5.653 1.57 6.095 4.495.015.094.026.188.035.281 1.289.149 2.371 1.144 2.574 2.488.11.726-.056 1.432-.418 2.009.876.799 1.494 1.892 1.685 3.154.442 2.925-1.57 5.653-4.494 6.096-2.116.319-4.129-.645-5.248-2.312-1.36 1.326-3.247 2.265-5.436 2.55-4.953.646-9.575-2.294-10.324-6.565-.402-2.301.401-4.518 2.002-6.177-1.069-.717-1.846-1.864-2.054-3.239-.393-2.596 1.394-5.018 3.989-5.41Z\"\n        clip-rule=\"evenodd\"\n      />\n      <path\n        fill=\"#0B1C2C\"\n        fill-rule=\"evenodd\"\n        d=\"M42.465 49.325h65.181c2.417 0 4.589 2.2109 4.395 4.891l-6.529 90.301c-.194 2.68-1.978 4.89-4.396 4.89H48.264c-2.417 0-4.232-2.206-4.395-4.89l-5.8-90.301c-.164-2.6841 1.979-4.891 4.396-4.891Z\"\n        clip-rule=\"evenodd\"\n      />\n      <path\n        fill=\"#20201E\"\n        fill-rule=\"evenodd\"\n        d=\"M42.465 49.267h65.181c.097 0 .194.003.291.01 1.115.081 2.159.619 2.925 1.444.765.824 1.251 1.936 1.251 3.162 0 .11-.004.223-.012.337l-6.53 90.302c-.1 1.381-.619 2.641-1.43 3.543-.778.866-1.825 1.402-3.025 1.402H48.264c-1.204 0-2.261-.539-3.044-1.411-.81-.9-1.327-2.155-1.41-3.535L38.011 54.22c-.007-.1-.01-.197-.01-.293 0-1.246.489-2.375 1.261-3.209.772-.835 1.827-1.375 2.958-1.444.083-.005.164-.007.245-.007Zm65.18.118H42.464c-.081 0-.16.003-.238.008-1.1.067-2.126.593-2.878 1.405-.751.813-1.229 1.913-1.229 3.129 0 .096.003.19.009.285l5.799 90.302c.082 1.353.588 2.582 1.38 3.463.762.847 1.787 1.371 2.956 1.371h52.852c1.164 0 2.18-.521 2.936-1.363.793-.882 1.302-2.115 1.4-3.472l6.53-90.302c.008-.109.011-.219.011-.328.001-1.195-.474-2.278-1.219-3.081-.745-.804-1.762-1.328-2.847-1.406-.091-.007-.186-.011-.281-.011Z\"\n        clip-rule=\"evenodd\"\n      />\n      <path\n        fill=\"#0B1C2C\"\n        fill-rule=\"evenodd\"\n        d=\"M124.782 51.426h65.18c2.418 0 4.643 2.215 4.397 4.891l-8.13 88.2c-.246 2.676-1.978 4.89-4.395 4.89h-52.852c-2.417 0-4.232-2.206-4.396-4.89l-4.2-88.2c-.163-2.684 1.978-4.891 4.396-4.891Z\"\n        clip-rule=\"evenodd\"\n      />\n      <path\n        fill=\"#20201E\"\n        fill-rule=\"evenodd\"\n        d=\"M124.782 51.366h65.18c.123 0 .248.006.372.018 1.089.101 2.115.635 2.868 1.442.753.809 1.234 1.89 1.234 3.084 0 .134-.007.271-.02.411l-8.129 88.201c-.128 1.388-.653 2.654-1.465 3.557-.77.857-1.798 1.388-2.99 1.388H128.98c-1.204 0-2.262-.54-3.045-1.411-.809-.9-1.325-2.156-1.41-3.535l-4.199-88.201c-.006-.1-.009-.196-.009-.292 0-1.246.489-2.375 1.261-3.21.771-.834 1.827-1.374 2.957-1.443.084-.006.166-.009.247-.009Zm65.18.119h-65.18c-.081 0-.161.003-.239.007-1.099.067-2.126.594-2.877 1.406-.752.813-1.229 1.913-1.229 3.129 0 .096.003.19.009.285l4.2 88.201c.082 1.353.588 2.582 1.38 3.463.762.847 1.787 1.371 2.956 1.371h52.852c1.156 0 2.153-.516 2.902-1.348.795-.885 1.309-2.126 1.434-3.488l8.129-88.201c.013-.133.018-.267.018-.4 0-1.163-.469-2.216-1.202-3.003-.734-.787-1.732-1.308-2.792-1.405-.117-.011-.238-.017-.361-.017Z\"\n        clip-rule=\"evenodd\"\n      />\n      <path\n        fill=\"#182435\"\n        fill-rule=\"evenodd\"\n        d=\"M17.183 60.45 46.14 29.266h140.157l28.955 31.184H17.183Z\"\n        clip-rule=\"evenodd\"\n      />\n      <path\n        fill=\"#78849C\"\n        fill-rule=\"evenodd\"\n        d=\"M44.35 31.351c-1.15 0-2.083-.933-2.083-2.083 0-1.151.933-2.084 2.083-2.084h143.738c1.15 0 2.084.933 2.084 2.084 0 1.15-.934 2.083-2.084 2.083H44.35Z\"\n        clip-rule=\"evenodd\"\n      />\n      <path\n        fill=\"#374356\"\n        fill-rule=\"evenodd\"\n        d=\"M15.773 62.103c-1.15 0-2.084-.933-2.084-2.083 0-1.151.934-2.084 2.084-2.084h200.891c1.151 0 2.084.933 2.084 2.084 0 1.15-.933 2.083-2.084 2.083H15.773Z\"\n        clip-rule=\"evenodd\"\n      />\n      <path\n        fill=\"#D78318\"\n        fill-rule=\"evenodd\"\n        d=\"M144.841 91.517h14.276V78.601c0-3.927-3.212-7.139-7.139-7.139-3.925 0-7.138 3.212-7.138 7.139l.001 12.916ZM144.841 123.978h14.276v-12.916c0-3.926-3.212-7.138-7.139-7.138-3.925 0-7.138 3.212-7.138 7.138l.001 12.916ZM49.269 91.517h14.276V78.601c0-3.927-3.212-7.139-7.139-7.139-3.926 0-7.138 3.212-7.138 7.139v12.916h.001Z\"\n        clip-rule=\"evenodd\"\n      />\n      <path fill=\"#0B1C2C\" d=\"M57.3 70.066h-1.786v22.845H57.3V70.066Z\" />\n      <path\n        fill=\"#0B1C2C\"\n        d=\"M66.352 77.4919h-19.89v1.786h19.89v-1.786ZM66.352 84.7581h-19.89v1.7849h19.89v-1.7849Z\"\n      />\n      <path\n        fill=\"#D78318\"\n        fill-rule=\"evenodd\"\n        d=\"M49.269 123.978h14.276v-12.916c0-3.926-3.212-7.138-7.139-7.138-3.926 0-7.138 3.212-7.138 7.138v12.916h.001Z\"\n        clip-rule=\"evenodd\"\n      />\n      <path fill=\"#0B1C2C\" d=\"M57.3 102.528h-1.786v22.845H57.3v-22.845Z\" />\n      <path\n        fill=\"#0B1C2C\"\n        d=\"M66.352 109.954h-19.89v1.786h19.89v-1.786ZM66.352 117.219h-19.89v1.786h19.89v-1.786ZM152.872 70.066h-1.786v22.845h1.786V70.066Z\"\n      />\n      <path\n        fill=\"#0B1C2C\"\n        d=\"M161.924 77.4919h-19.889v1.786h19.889v-1.786ZM161.924 84.7581h-19.889v1.7849h19.889v-1.7849ZM152.872 102.528h-1.786v22.845h1.786v-22.845Z\"\n      />\n      <path\n        fill=\"#0B1C2C\"\n        d=\"M161.924 109.954h-19.889v1.786h19.889v-1.786ZM161.924 117.219h-19.889v1.786h19.889v-1.786Z\"\n      />\n      <path\n        fill=\"#192739\"\n        fill-rule=\"evenodd\"\n        d=\"M73.441 52.193h64.735c2.407 0 4.539 2.379 4.377 5.272l-4.864 86.258c-.163 2.894-1.97 5.273-4.377 5.273H78.305c-2.407 0-4.214-2.379-4.377-5.273l-4.863-86.258c-.164-2.893 1.969-5.272 4.376-5.272Z\"\n        clip-rule=\"evenodd\"\n      />\n      <path\n        fill=\"#D78318\"\n        fill-rule=\"evenodd\"\n        d=\"M84.772 96.689h16.147V74.361c0-4.44-3.633-8.073-8.073-8.073s-8.073 3.633-8.073 8.073v22.328h-.001Z\"\n        clip-rule=\"evenodd\"\n      />\n      <path fill=\"#121C28\" d=\"M93.739 64.174h-1.787v34.631h1.787V64.174Z\" />\n      <path\n        fill=\"#121C28\"\n        d=\"M100.918 75.892H84.772v1.786h16.146v-1.786ZM100.918 86.9041H84.772V88.69h16.146v-1.7859Z\"\n      />\n      <path\n        fill=\"#D78318\"\n        fill-rule=\"evenodd\"\n        d=\"M111.503 96.689h16.146V74.361c0-4.44-3.633-8.073-8.073-8.073s-8.073 3.633-8.073 8.073v22.328Z\"\n        clip-rule=\"evenodd\"\n      />\n      <path fill=\"#192739\" d=\"M120.468 64.174h-1.786v34.631h1.786V64.174Z\" />\n      <path\n        fill=\"#192739\"\n        d=\"M127.649 75.892h-16.147v1.786h16.147v-1.786ZM127.649 86.9041h-16.147V88.69h16.147v-1.7859Z\"\n      />\n      <path\n        fill=\"#D78318\"\n        fill-rule=\"evenodd\"\n        d=\"M92.604 137.378h26.409v-23.787c0-7.263-5.942-13.204-13.204-13.204-7.264 0-13.205 5.941-13.205 13.204v23.787Z\"\n        clip-rule=\"evenodd\"\n      />\n      <path\n        fill=\"#B86E18\"\n        fill-rule=\"evenodd\"\n        d=\"M94.419 137.378h22.78v-23.787c0-6.261-5.129-11.39-11.39-11.39-6.262 0-11.391 5.129-11.391 11.39l.001 23.787Z\"\n        clip-rule=\"evenodd\"\n      />\n      <path\n        fill=\"#192739\"\n        fill-rule=\"evenodd\"\n        d=\"M167.454 148.996h23.086c2.222 0 4.04-1.818 4.04-4.041V47.567c0-2.223-1.818-4.041-4.04-4.041h-23.086c-2.223 0-4.041 1.818-4.041 4.041v97.388c0 2.223 1.818 4.041 4.041 4.041Z\"\n        clip-rule=\"evenodd\"\n      />\n      <path\n        fill=\"#D78318\"\n        fill-rule=\"evenodd\"\n        d=\"M171.858 91.517h14.276V78.601c0-3.927-3.212-7.139-7.138-7.139-3.927 0-7.139 3.212-7.139 7.139v12.916h.001Z\"\n        clip-rule=\"evenodd\"\n      />\n      <path fill=\"#192739\" d=\"M179.889 70.066h-1.786v22.845h1.786V70.066Z\" />\n      <path\n        fill=\"#192739\"\n        d=\"M188.942 77.4919h-19.889v1.786h19.889v-1.786ZM188.942 84.7581h-19.889v1.7849h19.889v-1.7849Z\"\n      />\n      <path\n        fill=\"#D78318\"\n        fill-rule=\"evenodd\"\n        d=\"M171.858 123.978h14.276v-12.916c0-3.926-3.212-7.138-7.138-7.138-3.927 0-7.139 3.212-7.139 7.138v12.916h.001Z\"\n        clip-rule=\"evenodd\"\n      />\n      <path fill=\"#192739\" d=\"M179.889 102.528h-1.786v22.845h1.786v-22.845Z\" />\n      <path\n        fill=\"#192739\"\n        d=\"M188.942 109.954h-19.889v1.786h19.889v-1.786ZM188.942 117.219h-19.889v1.786h19.889v-1.786Z\"\n      />\n      <path\n        fill=\"#021728\"\n        fill-rule=\"evenodd\"\n        d=\"M105.809 57.8319H59.801l31.961-43.84h28.094l31.961 43.84H105.809Z\"\n        clip-rule=\"evenodd\"\n      />\n      <path\n        fill=\"#D78318\"\n        fill-rule=\"evenodd\"\n        d=\"M105.89 45.273c4.593 0 8.339-3.747 8.339-8.341 0-4.593-3.746-8.34-8.339-8.34-4.594 0-8.34 3.747-8.34 8.34.001 4.594 3.747 8.341 8.34 8.341Z\"\n        clip-rule=\"evenodd\"\n      />\n      <path fill=\"#021728\" d=\"M106.783 24.874h-1.786v23.524h1.786V24.874Z\" />\n      <path fill=\"#021728\" d=\"M120.965 35.743H90.814v1.786h30.151v-1.786Z\" />\n      <path\n        fill=\"#021728\"\n        fill-rule=\"evenodd\"\n        d=\"M156.693 57.832 179.612 0 201.3 57.832h-44.607Z\"\n        clip-rule=\"evenodd\"\n      />\n      <path\n        fill=\"#78849C\"\n        fill-rule=\"evenodd\"\n        d=\"M59.801 59.427c-1.15 0-2.084-.933-2.084-2.084 0-1.15.934-2.084 2.084-2.084h92.017c1.15 0 2.084.934 2.084 2.084 0 1.151-.934 2.084-2.084 2.084H59.801ZM156.693 59.427c-1.15 0-2.083-.933-2.083-2.084 0-1.15.933-2.084 2.083-2.084h44.606c1.15 0 2.084.934 2.084 2.084 0 1.151-.934 2.084-2.084 2.084h-44.606Z\"\n        clip-rule=\"evenodd\"\n      />\n      <path\n        fill=\"#D78318\"\n        fill-rule=\"evenodd\"\n        d=\"M179.505 45.273c4.594 0 8.34-3.747 8.34-8.341 0-4.593-3.746-8.34-8.34-8.34-4.594 0-8.34 3.747-8.34 8.34 0 4.594 3.746 8.341 8.34 8.341Z\"\n        clip-rule=\"evenodd\"\n      />\n      <path fill=\"#021728\" d=\"M180.398 28.0911h-1.787v17.684h1.787v-17.684Z\" />\n      <path fill=\"#021728\" d=\"M190.838 36.04h-22.667v1.786h22.667V36.04Z\" />\n      <path\n        fill=\"#374356\"\n        fill-rule=\"evenodd\"\n        d=\"M71.802 62.512c-.019-.409.297-.757.707-.776.409-.019.757.297.776.707l3.465 70.888c.02.41-.297.758-.706.776-.409.02-.757-.297-.776-.707l-3.466-70.888Z\"\n        clip-rule=\"evenodd\"\n      />\n      <path\n        fill=\"#021728\"\n        fill-rule=\"evenodd\"\n        d=\"M138.122 62.4419c.02-.41.367-.726.776-.707.409.02.725.367.706.776l-3.466 70.8881c-.019.41-.366.727-.775.707-.41-.019-.727-.366-.707-.776l3.466-70.8881Z\"\n        clip-rule=\"evenodd\"\n      />\n      <path\n        fill=\"#2F3B4E\"\n        fill-rule=\"evenodd\"\n        d=\"M91.401 17.969c.195-.264.566-.318.83-.123.263.195.318.566.123.83L67.401 52.45c-.194.263-.566.318-.83.123-.263-.195-.318-.566-.123-.83l24.953-33.774ZM178.406 6.76395c.119-.306.465-.457.77-.337.306.119.457.46401.337.77001L161.743 52.565c-.119.306-.464.457-.77.337-.306-.119-.457-.464-.338-.77l17.771-45.36805ZM25.646 56.6589c-.224.24-.6.2541-.84.0311-.24-.224-.254-.6-.03-.84l20.92-22.559c.224-.24.6-.254.84-.03s.254.6.03.84l-20.92 22.5579Z\"\n        clip-rule=\"evenodd\"\n      />\n      <path\n        fill=\"#021728\"\n        fill-rule=\"evenodd\"\n        d=\"M40.813 121.849c-2.506-.379-4.851 1.273-5.362 3.725-.136-.041-.274-.073-.419-.095-.963-.145-1.888.192-2.527.832-.809-.953-1.952-1.631-3.285-1.832-2.924-.441-5.652 1.57-6.095 4.495-.015.094-.025.188-.035.281-1.289.149-2.371 1.144-2.575 2.488-.109.726.057 1.432.419 2.009-.876.799-1.494 1.892-1.685 3.154-.442 2.925 1.57 5.653 4.494 6.096 2.116.319 4.129-.645 5.248-2.312 1.36 1.326 3.247 2.265 5.437 2.55 4.953.646 9.575-2.294 10.323-6.565.403-2.301-.4-4.518-2.002-6.177 1.07-.717 1.848-1.864 2.055-3.239.392-2.596-1.394-5.018-3.991-5.41Z\"\n        clip-rule=\"evenodd\"\n      />\n      <path\n        fill=\"#021728\"\n        fill-rule=\"evenodd\"\n        d=\"M11.695 137.378h209.047c1.667 0 3.031 1.364 3.031 3.031v4.988H8.664v-4.988c0-1.667 1.364-3.031 3.031-3.031Z\"\n        clip-rule=\"evenodd\"\n      />\n      <path\n        fill=\"#192739\"\n        fill-rule=\"evenodd\"\n        d=\"M3.02532 145H228.976c1.664 0 3.024 1.53 3.024 3.401v2.197c0 1.871-1.36 3.402-3.024 3.402H3.02532C1.36145 154 0 152.469 0 150.598v-2.197C0 146.53 1.36145 145 3.02532 145Z\"\n        clip-rule=\"evenodd\"\n      />\n    </g>\n    <defs>\n      <clipPath id=\"clip0_4_362\">\n        <path fill=\"#fff\" d=\"M0 0h232v154H0z\" />\n      </clipPath>\n    </defs>\n  </svg>\n</template>\n\n<style lang=\"scss\" scoped>\n.house {\n  position: fixed;\n  bottom: -1px;\n  left: 50%;\n  transform: translate(-50%, 0);\n  height: 35%;\n  z-index: 1;\n  cursor: pointer;\n}\n</style>\n","import { render } from \"./House.vue?vue&type=template&id=07df612c&scoped=true\"\nconst script = {}\n\nimport \"./House.vue?vue&type=style&index=0&id=07df612c&lang=scss&scoped=true\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-07df612c\"]])\n\nexport default __exports__","<template>\n  <svg\n    class=\"cloud\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n    fill=\"none\"\n    viewBox=\"0 0 141 64\"\n  >\n    <g filter=\"url(#filter0_f_7_3)\">\n      <path\n        fill=\"#fff\"\n        d=\"M11.9959 11.6054c3.4554-3.1163 7.757-5.13831 12.3612-5.8105l11.3933-1.66337c5.0813-.74184 10.2679-.16696 15.0634 1.6696l9.567 3.66398c4.3529 1.66709 9.0343 2.29689 13.673 1.83949l21.7085-2.1403c4.4357-.43737 8.9137.1193 13.1077 1.6295l13.459 4.8467c9.049 3.2584 15.081 11.8426 15.081 21.4601v.2912c0 4.986-1.695 9.8239-4.808 13.7193-4.454 5.5746-11.337 8.6399-18.46 8.2209l-11.392-.6701c-1.83-.1076-3.6648-.0474-5.4831.1799l-14.9401 1.8675c-6.689.8361-13.4647-.605-19.2345-4.0909l-6.4553-3.9001c-5.6037-3.3856-12.1612-4.8451-18.6718-4.1558l-9.9736 1.0559c-2.963.3136-5.9588.017-8.8027-.8717l-.2704-.0846C11.8268 46.446 6.40154 40.6958 4.60111 33.4874c-1.90852-7.6413.55363-15.7122 6.40239-20.987l.9924-.895Z\"\n      />\n    </g>\n    <defs>\n      <filter\n        id=\"filter0_f_7_3\"\n        width=\"139.445\"\n        height=\"63.124\"\n        x=\".965439\"\n        y=\".816895\"\n        color-interpolation-filters=\"sRGB\"\n        filterUnits=\"userSpaceOnUse\"\n      >\n        <feFlood flood-opacity=\"0\" result=\"BackgroundImageFix\" />\n        <feBlend in=\"SourceGraphic\" in2=\"BackgroundImageFix\" result=\"shape\" />\n        <feGaussianBlur\n          result=\"effect1_foregroundBlur_7_3\"\n          stdDeviation=\"1.5\"\n        />\n      </filter>\n    </defs>\n  </svg>\n</template>\n\n<style lang=\"scss\" scoped>\n.cloud {\n  height: 8%;\n}\n</style>\n","import { render } from \"./Cloud.vue?vue&type=template&id=0dd2138c&scoped=true\"\nconst script = {}\n\nimport \"./Cloud.vue?vue&type=style&index=0&id=0dd2138c&lang=scss&scoped=true\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-0dd2138c\"]])\n\nexport default __exports__","<template>\n  <svg\n    class=\"sale\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n    fill=\"none\"\n    viewBox=\"0 0 209 213\"\n  >\n    <mask id=\"path-1-inside-1_9_5\" fill=\"#fff\">\n      <path\n        fill-rule=\"evenodd\"\n        d=\"M75.6392 169.98c36.2358 16.139 82.6708-4.252 105.6148-47.257 23.804-44.6184 14.376-87.035-51.998-62.7693-19.548-67.51092-57.2881-52.85351-81.0923-8.2352C25.22 94.7241 34.1418 144.648 67.7257 165.758l-4.6806 8.773 7.9134 4.222 4.6807-8.773Z\"\n        clip-rule=\"evenodd\"\n      />\n    </mask>\n    <path\n      fill=\"#FF2121\"\n      fill-rule=\"evenodd\"\n      d=\"M75.6392 169.98c36.2358 16.139 82.6708-4.252 105.6148-47.257 23.804-44.6184 14.376-87.035-51.998-62.7693-19.548-67.51092-57.2881-52.85351-81.0923-8.2352C25.22 94.7241 34.1418 144.648 67.7257 165.758l-4.6806 8.773 7.9134 4.222 4.6807-8.773Z\"\n      clip-rule=\"evenodd\"\n    />\n    <path\n      fill=\"#000\"\n      d=\"m75.6392 169.98.4068-.914-.8507-.379-.4384.822.8823.471ZM129.256 59.9537l-.961.2781.298 1.0289 1.006-.3678-.343-.9392ZM67.7257 165.758l.8823.471.4384-.822-.7885-.496-.5322.847Zm-4.6806 8.773-.8823-.471-.4707.883.8823.47.4707-.882Zm7.9134 4.222-.4707.882.8823.471.4707-.882-.8823-.471Zm109.4125-56.501c-22.775 42.69-68.708 62.678-104.325 46.814l-.8137 1.827c36.8537 16.415 83.7917-4.378 106.9037-47.699l-1.765-.942Zm-50.772-61.3591c16.516-6.0379 29.379-7.8842 39.004-6.6512 9.585 1.2281 15.945 5.5024 19.605 11.7694 3.685 6.3101 4.715 14.7833 3.308 24.5254-1.407 9.7305-5.234 20.6365-11.145 31.7155l1.765.942c5.991-11.231 9.912-22.359 11.359-32.3715 1.445-10.0016.434-18.9819-3.56-25.82-4.018-6.8812-10.972-11.4499-21.078-12.7445-10.067-1.2897-23.273.6615-39.945 6.7565l.687 1.8784Zm-80.553-8.7037c5.914-11.0852 12.6721-20.267 19.7576-26.764 7.0929-6.5037 14.4428-10.2546 21.5562-10.639 7.0687-.3821 14.0842 2.5508 20.5812 9.7929 6.52 7.2668 12.489 18.85 17.354 35.6527l1.921-.5563c-4.908-16.9527-10.987-28.8539-17.786-36.432-6.821-7.6027-14.3929-10.8752-22.1782-10.4544-7.7405.4183-15.5107 4.4783-22.7998 11.162-7.2965 6.6905-14.1825 16.0727-20.1705 27.2967l1.7645.9414ZM68.2579 164.911C35.2471 144.161 26.2705 94.8794 49.046 52.1892l-1.7645-.9414c-23.1121 43.321-14.245 93.8862 19.912 115.3562l1.0644-1.693Zm-4.3305 10.091 4.6806-8.773-1.7646-.942-4.6806 8.773 1.7646.942Zm7.5019 2.869-7.9135-4.222-.9414 1.764 7.9134 4.222.9415-1.764Zm3.3276-8.362-4.6806 8.773 1.7645.942 4.6807-8.774-1.7646-.941Z\"\n      mask=\"url(#path-1-inside-1_9_5)\"\n    />\n    <path\n      fill=\"#fff\"\n      d=\"M81.5909 61.5632c-1.0882-.5805-1.8665-1.3169-2.335-2.2091-.4686-.8923-.8096-1.8109-1.0232-2.7561-.1842-.9294-.3929-1.7775-.6261-2.5442-.2333-.7667-.6587-1.3148-1.2763-1.6443-.5294-.2824-1.1862-.255-1.9706.0821-.7392.3235-1.7413 1.2812-3.0062 2.8732l-2.535-2.2592c1.8669-2.3664 3.5593-3.7682 5.077-4.2052 1.5177-.4371 2.9089-.3182 4.1735.3564 1.0587.5649 1.8224 1.2934 2.2909 2.1856.4685.8923.8095 1.8109 1.0231 2.7561.2136.9451.437 1.801.6703 2.5677.2332.7667.6586 1.3148 1.2762 1.6443.5588.2981 1.2157.2707 1.9706-.0821.755-.3528 1.7943-1.3096 3.118-2.8702l2.535 2.2592c-1.912 2.3801-3.6417 3.7809-5.1888 4.2022-1.5177.4371-2.9088.3183-4.1734-.3564Zm37.7341-2.6504c-4.607 3.3229-8.875 6.8262-12.805 10.51-3.914 3.6544-7.4606 7.5049-10.6395 11.5515l-3.9262-2.0946c3.1476-3.9878 6.6481-7.7874 10.5017-11.3986 3.853-3.6113 8.03-7.0499 12.531-10.316l-13.852-7.3901 1.883-3.5291 17.954 9.5789-1.647 3.088Zm20.115 21.7823-3.507 6.573c-2.134 3.9998-4.647 6.5504-7.539 7.652-2.893 1.1015-5.942.7972-9.147-.913-3.206-1.7103-5.157-4.0733-5.852-7.0891-.667-3 .067-6.4999 2.201-10.4997l3.507-6.573c2.118-3.9703 4.623-6.5063 7.516-7.6078 2.892-1.1016 5.926-.8051 9.102.8894 3.206 1.7103 5.157 4.0733 5.852 7.0891.696 3.0157-.015 6.5088-2.133 10.4791Zm-3.882-2.0711c1.631-3.0586 2.249-5.5625 1.854-7.5115-.367-1.9334-1.55-3.4336-3.55-4.5005-1.97-1.0513-3.875-1.1986-5.714-.442-1.81.7723-3.531 2.6878-5.163 5.7464l-3.507 6.5731c-1.616 3.0291-2.256 5.5398-1.921 7.532.38 1.9785 1.555 3.4934 3.525 4.5446 2 1.067 3.913 1.1996 5.739.3979 1.87-.8155 3.614-2.7378 5.23-5.767l3.507-6.573Zm23.961 5.3598-.729 1.3676c-1.052 1.9704-2.397 3.2173-4.036 3.7406-1.594.5096-3.318.2701-5.171-.7183-1.882-1.0042-3.055-2.3103-3.52-3.9182-.448-1.6373-.147-3.4412.904-5.4116l.73-1.3676c1.035-1.941 2.35-3.1663 3.944-3.6759 1.61-.539 3.356-.3064 5.238.6978 1.853.9885 3.004 2.3014 3.453 3.9387.494 1.6236.223 3.4059-.813 5.3469Zm12.374-.9924 3.132 1.671-31.356 21.8076-3.132-1.671 31.356-21.8076Zm-15.285-.5609c.596-1.1176.786-2.1117.571-2.9823-.216-.8706-.794-1.557-1.735-2.059-.941-.5021-1.834-.6003-2.677-.2945-.843.3057-1.563 1.0174-2.159 2.135l-.729 1.3675c-.612 1.147-.811 2.1558-.595 3.0264.216.8706.794 1.557 1.735 2.0591.941.5021 1.833.6002 2.676.2945.844-.3058 1.571-1.0322 2.183-2.1792l.73-1.3675Zm12.011 27.9425-.73 1.368c-1.051 1.97-2.396 3.217-4.036 3.74-1.594.51-3.317.271-5.17-.718-1.882-1.004-3.056-2.31-3.52-3.918-.449-1.637-.148-3.441.903-5.412l.73-1.367c1.036-1.941 2.35-3.167 3.945-3.676 1.609-.5391 3.356-.307 5.238.698 1.882 1.004 3.047 2.325 3.496 3.962.465 1.608.179 3.382-.856 5.323Zm-2.868-1.53c1.224-2.293.821-3.982-1.208-5.064-.941-.502-1.833-.601-2.676-.295-.844.306-1.563 1.018-2.159 2.135l-.73 1.368c-.612 1.147-.81 2.155-.595 3.026.216.871.794 1.557 1.735 2.059 2.03 1.083 3.664.462 4.904-1.861l.729-1.368ZM50.6011 120.969c1.8528.988 3.491 1.352 4.9146 1.092 1.4392-.29 2.5746-1.215 3.4062-2.773.6904-1.294.918-2.571.6829-3.83-.2057-1.243-.9624-2.516-2.2701-3.818l-3.0084-2.965c-1.8743-1.869-2.9799-3.762-3.3169-5.68-.3213-1.947.0515-3.9203 1.1185-5.9202.8158-1.5293 1.8474-2.7546 3.0946-3.676 1.2766-.9057 2.7727-1.3732 4.4884-1.4023 1.7451-.0135 3.7058.5603 5.8821 1.7213 1.3234.7061 2.6047 1.5974 3.8438 2.6741 1.2547 1.0472 2.4222 2.2935 3.5024 3.7391l-3.0003 2.649c-1.0822-1.371-2.1262-2.494-3.1319-3.3708-.9607-.8903-1.9557-1.6101-2.9851-2.1592-1.6763-.8944-3.1733-1.2397-4.491-1.0359-1.2726.19-2.3325 1.0791-3.1798 2.6672-.6119 1.1467-.8209 2.2827-.6269 3.4057.2097 1.094.9752 2.315 2.2966 3.662l3.0084 2.965c3.7642 3.709 4.4774 7.754 2.1395 12.136-1.3493 2.529-3.2123 4.18-5.5889 4.952-2.3609.743-5.2323.212-8.6145-1.592-1.3822-.738-2.7664-1.684-4.1525-2.839-1.341-1.169-2.6389-2.56-3.8936-4.174l2.9327-2.629c1.1822 1.537 2.3124 2.782 3.3907 3.736 1.1077.968 2.2939 1.79 3.5585 2.465Zm30.4646 20.106 1.4688-8.17-11.3816-6.072-5.9684 5.77-3.7497-2.001 25.9739-24.679 3.6174 1.93-5.9901 35.341-3.9703-2.119Zm-2.5206-21.406-4.43 4.267 9.1317 4.872 1.0773-6.056 2.075-10.793-7.854 7.71Zm30.4169 31.699-1.906 3.573-16.4109-8.755 16.0039-29.998 3.838 2.048-14.0976 26.424 12.5726 6.708Zm22.669 12.094-1.907 3.573-16.763-8.943 16.004-29.998 16.322 8.708-1.93 3.617-12.484-6.66-5.013 9.396 11.161 5.955-1.93 3.617-11.161-5.954-5.225 9.793 12.926 6.896Z\"\n    />\n    <path\n      fill=\"#000\"\n      d=\"m79.2559 59.3541.8853-.4649-.8853.4649Zm-1.0232-2.7561-.9809.1944.0026.0131.0029.013.9754-.2205Zm-.6261-2.5442-.9567.2911.9567-.2911Zm-3.2469-1.5622-.3949-.9187-.0059.0026.4008.9161Zm-3.0062 2.8732-.6654.7465.79.704.6583-.8285-.7829-.622Zm-2.535-2.2592-.7851-.6194-.5833.7394.703.6265.6654-.7465Zm5.077-4.2052-.2767-.961.2767.961Zm6.4644 2.542.8853-.4649-.8853.4649Zm1.0231 2.7561.9754-.2205-.9754.2205Zm.6703 2.5677.9567-.291-.9567.291Zm3.2468 1.5622.4234.9059-.4234-.9059Zm3.118-2.8702.6654-.7465-.7651-.6818-.6629.7815.7626.6468Zm2.535 2.2592.7796.6263.5951-.7407-.7093-.6322-.6654.7466Zm-5.1888 4.2022-.2627-.9648-.007.0019-.007.002.2767.9609Zm-3.7027-1.2387c-.9513-.5075-1.5642-1.1134-1.9204-1.7917l-1.7707.9298c.5808 1.1061 1.5246 1.9729 2.7496 2.6265l.9415-1.7646Zm-1.9204-1.7917c-.4296-.8182-.7395-1.6549-.9331-2.5116l-1.9508.4409c.2336 1.0335.6058 2.0341 1.1132 3.0005l1.7707-.9298Zm-.9276-2.4856c-.1895-.9563-.4059-1.8372-.6503-2.6408l-1.9134.5821c.222.7298.423 1.545.6019 2.4475l1.9618-.3888Zm-.6503-2.6408c-.2983-.9805-.8763-1.7629-1.7623-2.2355l-.9414 1.7645c.3492.1863.6221.5002.7903 1.0531l1.9134-.5821Zm-1.7623-2.2355c-.897-.4786-1.8962-.3584-2.8362.0456l.7898 1.8375c.6288-.2703.9433-.2049 1.105-.1186l.9414-1.7645Zm-2.8421.0482c-.5272.2306-1.0622.6438-1.5961 1.1541-.5453.5211-1.1433 1.1962-1.7923 2.0131l1.5659 1.2441c.6159-.7751 1.1514-1.3748 1.6082-1.8114.4682-.4474.8039-.6748 1.0159-.7676l-.8016-1.8323Zm-1.9401 3.0427-2.535-2.2592-1.3307 1.4931 2.535 2.2592 1.3307-1.4931Zm-2.4153-.8932c1.8377-2.3293 3.3656-3.5172 4.5687-3.8637l-.5534-1.9219c-1.8323.5277-3.6891 2.1432-5.5854 4.5468l1.5701 1.2388Zm4.5687-3.8637c1.2957-.3731 2.4152-.2615 3.4261.2778l.9414-1.7645c-1.5184-.8101-3.1812-.9362-4.9209-.4352l.5534 1.9219Zm3.4261.2778c.9162.4888 1.5176 1.0852 1.8762 1.7682l1.7707-.9298c-.5783-1.1014-1.5042-1.9621-2.7055-2.6029l-.9414 1.7645Zm1.8762 1.7682c.4296.8182.7395 1.6549.9331 2.5116l1.9508-.4409c-.2336-1.0335-.6057-2.0341-1.1132-3.0005l-1.7707.9298Zm.9331 2.5116c.2179.9642.4474 1.8441.689 2.6383l1.9134-.582c-.2249-.7392-.4423-1.5711-.6516-2.4972l-1.9508.4409Zm.689 2.6383c.2982.9806.8762 1.7629 1.7622 2.2356l.9414-1.7646c-.3492-.1863-.622-.5002-.7902-1.053l-1.9134.582Zm1.7622 2.2356c.9199.4907 1.9227.3818 2.8647-.0585l-.8468-1.8118c-.5679.2654-.8788.2112-1.0765.1057l-.9414 1.7646Zm2.8647-.0585c.9748-.4556 2.1383-1.5742 3.4573-3.1292l-1.5253-1.2937c-1.3285 1.5662-2.2437 2.361-2.7788 2.6111l.8468 1.8118Zm2.0293-3.0295 2.535 2.2592 1.3307-1.4932-2.535-2.2591-1.3307 1.4931Zm2.4207.8863c-1.8819 2.3426-3.4435 3.5291-4.6719 3.8637l.5255 1.9297c1.8658-.5081 3.7634-2.1231 5.7056-4.5408l-1.5592-1.2526Zm-4.6859 3.8676c-1.2956.3731-2.4152.2615-3.426-.2778l-.9415 1.7646c1.5184.8101 3.1812.9361 4.921.4351l-.5535-1.9219Zm33.8374-2.0459.585.811.188-.1357.109-.2046-.882-.4707Zm-12.805 10.51.683.731.001-.0014-.684-.7296ZM95.8805 80.9743l-.4707.8823.7393.3945.5177-.659-.7863-.6178Zm-3.9262-2.0946-.785-.6196-.741.9389 1.0553.563.4707-.8823Zm10.5017-11.3986-.684-.7297.684.7297Zm12.531-10.316.587.8094 1.294-.9391-1.411-.7526-.47.8823Zm-13.852-7.3901-.883-.4707-.4703.8823.8823.4707.471-.8823Zm1.883-3.5291.47-.8823-.882-.4707-.471.8823.883.4707Zm17.954 9.5789.882.4707.471-.8823-.882-.4707-.471.8823Zm-2.232 2.277c-4.64 3.3465-8.941 6.8769-12.904 10.5914l1.368 1.4592c3.897-3.653 8.132-7.1294 12.706-10.4286l-1.17-1.622Zm-12.902 10.5901c-3.95 3.6879-7.532 7.5761-10.7439 11.6647l1.5727 1.2355c3.1461-4.0047 6.6572-7.8176 10.5362-11.4383l-1.365-1.4619ZM96.3512 80.092l-3.9262-2.0946-.9414 1.7646 3.9262 2.0946.9414-1.7646Zm-3.612-.5928c3.1155-3.9471 6.582-7.71 10.4008-11.2884l-1.368-1.4594c-3.8884 3.6441-7.423 7.4802-10.6027 11.5087l1.5699 1.2391ZM103.14 68.2108c3.821-3.5813 7.966-6.9935 12.434-10.2363l-1.175-1.6187c-4.532 3.2893-8.742 6.7544-12.627 10.3956l1.368 1.4594Zm12.317-11.928-13.852-7.3901-.941 1.7646 13.852 7.3901.941-1.7646Zm-13.44-6.0371 1.883-3.5291-1.765-.9414-1.883 3.5291 1.765.9414Zm.53-3.1175 17.954 9.5789.942-1.7646-17.955-9.5789-.941 1.7646Zm17.543 8.2259-1.648 3.088 1.765.9414 1.647-3.088-1.764-.9414Zm8.304 39.566.356.9345-.356-.9345Zm-14.999-8.0021-.977.2168.002.008.975-.2248Zm13.224-24.6805.356.9345-.356-.9345Zm14.954 7.9785-.974.2247.974-.2247Zm-4.161.8965-.983.1862.003.0128.98-.199Zm-9.264-4.9425-.381-.9249-.012.0052.393.9197Zm-10.591 19.8515-.987.1659.002.0114.003.0114.982-.1887Zm9.264 4.9425-.4-.9167-.002.0011.402.9156Zm11.736-10.7396-3.506 6.573 1.764.9415 3.507-6.5731-1.765-.9414Zm-3.506 6.573c-2.072 3.8835-4.432 6.2049-7.013 7.1882l.712 1.869c3.202-1.2199 5.869-3.9998 8.065-8.1157l-1.764-.9415Zm-7.013 7.1882c-2.575.9804-5.321.7394-8.321-.8608l-.941 1.7646c3.412 1.8202 6.763 2.1879 9.974.9652l-.712-1.869Zm-8.321-.8608c-2.999-1.6003-4.729-3.7473-5.348-6.4315l-1.949.4495c.772 3.3473 2.944 5.9263 6.356 7.7466l.941-1.7646Zm-5.346-6.4236c-.595-2.6781.034-5.9257 2.107-9.8122l-1.764-.9414c-2.194 4.113-3.033 7.8652-2.296 11.1872l1.953-.4336Zm2.107-9.8122 3.507-6.573-1.764-.9414-3.507 6.573 1.764.9414Zm3.507-6.573c2.055-3.8521 4.406-6.1602 6.99-7.144l-.712-1.869c-3.202 1.2193-5.861 3.983-8.042 8.0716l1.764.9414Zm6.99-7.144c2.577-.9815 5.309-.7458 8.276.8372l.941-1.7646c-3.385-1.806-6.722-2.1633-9.929-.9416l.712 1.869Zm8.276.8372c2.999 1.6003 4.729 3.7473 5.348 6.4315l1.949-.4495c-.772-3.3473-2.944-5.9263-6.356-7.7466l-.941 1.7646Zm5.348 6.4315c.621 2.6934.013 5.9316-2.042 9.7837l1.765.9414c2.181-4.0885 2.996-7.8364 2.226-11.1746l-1.949.4495Zm-4.159 8.654c1.668-3.1261 2.417-5.8879 1.952-8.1813l-1.96.3981c.325 1.6048-.161 3.8507-1.757 6.8418l1.765.9414Zm1.954-8.1684c-.432-2.2783-1.84-4.0115-4.061-5.1966l-.942 1.7646c1.779.9487 2.737 2.2159 3.038 3.8044l1.965-.3724Zm-4.061-5.1966c-2.197-1.1722-4.415-1.3694-6.566-.4845l.761 1.8496c1.527-.6283 3.12-.5308 4.863.3995l.942-1.7646Zm-6.578-.4794c-2.128.908-3.986 3.0728-5.652 6.1954l1.764.9414c1.598-2.9947 3.181-4.6607 4.673-5.2973l-.785-1.8395Zm-5.652 6.1954-3.507 6.573 1.764.9415 3.507-6.5731-1.764-.9414Zm-3.507 6.573c-1.654 3.1007-2.415 5.8523-2.026 8.1687l1.973-.3317c-.281-1.668.24-3.9378 1.817-6.8955l-1.764-.9415Zm-2.021 8.1915c.443 2.3098 1.833 4.0624 4.037 5.2382l.941-1.7645c-1.737-.9267-2.698-2.2038-3.014-3.851l-1.964.3773Zm4.037 5.2382c2.228 1.1889 4.464 1.3741 6.611.4312l-.804-1.8312c-1.505.6605-3.095.5805-4.866-.3645l-.941 1.7645Zm6.608.4323c2.177-.9489 4.057-3.1087 5.713-6.213l-1.764-.9414c-1.577 2.9542-3.183 4.639-4.748 5.321l.799 1.8334Zm5.713-6.213 3.507-6.573-1.765-.9414-3.506 6.573 1.764.9414Zm21.821 3.4243-.304-.9526-.001.0001.305.9525Zm-8.691-4.6365-.964.2644.004.0132.96-.2776Zm5.578-10.4551.305.9526.013-.0043-.318-.9483Zm8.691 4.6365-.965.2643.004.0134.004.0133.957-.291Zm11.561 4.3545.471-.8823-.54-.2879-.502.3492.571.821Zm3.132 1.671.571.821 1.342-.9336-1.442-.7697-.471.8823ZM143.669 106.47l-.471.882.54.288.502-.349-.571-.821Zm-3.132-1.671-.571-.821-1.342.934 1.442.769.471-.882Zm16.642-25.3508-.971.2404.971-.2404Zm-4.412-2.3535-.341-.9401.341.9401Zm-3.483 6.5289.971-.2403-.971.2403Zm4.411 2.3536-.34-.9401.34.9401Zm10.158 29.5038-.304-.952.304.952Zm-8.69-4.636-.965.264.004.014.961-.278Zm5.578-10.455.304.952.013-.004-.317-.948Zm8.734 4.66-.964.264.004.013.96-.277Zm-7.608-1.566.341.94-.341-.94Zm-3.484 6.529.971-.24-.971.24Zm.254-26.4999-.73 1.3676 1.765.9414.73-1.3676-1.765-.9414Zm-.73 1.3676c-.966 1.8117-2.133 2.8361-3.457 3.2587l.608 1.9052c1.955-.624 3.478-2.0933 4.614-4.2225l-1.765-.9414Zm-3.458 3.2588c-1.274.4075-2.716.2475-4.395-.6481l-.941 1.7646c2.026 1.0813 4.032 1.4002 5.945.7885l-.609-1.905Zm-4.395-.6481c-1.713-.9139-2.66-2.0315-3.03-3.3134l-1.921.5551c.558 1.9339 1.958 3.4283 4.01 4.5229l.941-1.7646Zm-3.026-3.3002c-.362-1.321-.149-2.8584.821-4.6766l-1.764-.9414c-1.133 2.1227-1.522 4.193-.986 6.1467l1.929-.5287Zm.821-4.6766.73-1.3675-1.765-.9415-.729 1.3676 1.764.9414Zm.73-1.3675c.953-1.7861 2.091-2.7863 3.367-3.1942l-.609-1.905c-1.913.6113-3.404 2.0617-4.523 4.1577l1.765.9415Zm3.38-3.1984c1.285-.4305 2.744-.2783 4.45.6318l.941-1.7646c-2.058-1.0983-4.092-1.4113-6.026-.7638l.635 1.8966Zm4.45.6318c1.671.8919 2.599 2.0089 2.958 3.3207l1.929-.5287c-.538-1.9628-1.912-3.4715-3.946-4.5566l-.941 1.7646Zm2.966 3.3474c.396 1.3009.211 2.8058-.738 4.5852l1.765.9414c1.121-2.1026 1.479-4.1624.886-6.1087l-1.913.5821Zm12.047 4.9458 3.132 1.671.942-1.7646-3.132-1.671-.942 1.7646Zm3.032-.0323-31.356 21.8076 1.142 1.642 31.356-21.8076-1.142-1.642ZM144.14 105.588l-3.132-1.671-.942 1.764 3.132 1.671.942-1.764Zm-3.032.032 31.356-21.8077-1.142-1.6419-31.356 21.8076 1.142 1.642Zm16.382-22.7188c.665-1.246.955-2.4999.659-3.6933l-1.941.4807c.136.5478.045 1.2821-.483 2.2712l1.765.9414Zm.659-3.6933c-.296-1.198-1.095-2.0931-2.235-2.701l-.941 1.7645c.743.3963 1.101.8739 1.235 1.4172l1.941-.4807Zm-2.235-2.701c-1.139-.608-2.327-.773-3.488-.3523l.682 1.8802c.526-.1908 1.122-.1596 1.865.2366l.941-1.7645Zm-3.488-.3523c-1.155.4191-2.035 1.3583-2.7 2.6044l1.764.9414c.528-.9891 1.088-1.4732 1.618-1.6656l-.682-1.8802Zm-2.7 2.6044-.73 1.3675 1.765.9414.729-1.3675-1.764-.9414Zm-.73 1.3675c-.676 1.2684-.979 2.5386-.683 3.7375l1.942-.4807c-.135-.5424-.041-1.2897.506-2.3154l-1.765-.9414Zm-.683 3.7375c.297 1.1979 1.096 2.093 2.235 2.701l.942-1.7646c-.743-.3962-1.101-.8738-1.235-1.4171l-1.942.4807Zm2.235 2.701c1.14.6079 2.328.773 3.488.3523l-.681-1.8802c-.527.1908-1.123.1595-1.865-.2367l-.942 1.7646Zm3.488.3523c1.161-.4211 2.048-1.3802 2.724-2.6486l-1.764-.9414c-.547 1.0257-1.116 1.5193-1.641 1.7098l.681 1.8802Zm2.724-2.6486.73-1.3675-1.765-.9414-.729 1.3675 1.764.9414Zm10.976 25.6343-.729 1.367 1.764.942.73-1.368-1.765-.941Zm-.729 1.367c-.967 1.812-2.134 2.836-3.458 3.259l.608 1.905c1.955-.624 3.478-2.093 4.614-4.222l-1.764-.942Zm-3.458 3.259c-1.275.407-2.717.248-4.396-.648l-.941 1.764c2.027 1.082 4.032 1.401 5.946.789l-.609-1.905Zm-4.396-.648c-1.712-.914-2.659-2.032-3.03-3.314l-1.921.556c.559 1.934 1.959 3.428 4.01 4.522l.941-1.764Zm-3.026-3.3c-.362-1.321-.148-2.859.822-4.677l-1.765-.941c-1.132 2.122-1.521 4.193-.986 6.146l1.929-.528Zm.822-4.677.729-1.367-1.764-.942-.73 1.368 1.765.941Zm.729-1.367c.953-1.787 2.091-2.787 3.367-3.195l-.609-1.9046c-1.912.6116-3.404 2.0616-4.522 4.1576l1.764.942Zm3.38-3.199c1.286-.43 2.744-.278 4.45.632l.941-1.765c-2.058-1.0979-4.092-1.4109-6.026-.7634l.635 1.8964Zm4.45.632c1.706.91 2.644 2.037 3.003 3.344l1.929-.528c-.539-1.967-1.932-3.482-3.991-4.581l-.941 1.765Zm3.007 3.357c.371 1.287.174 2.79-.779 4.576l1.765.941c1.118-2.096 1.492-4.143.935-6.072l-1.921.555Zm-1.881 3.987c.671-1.258.986-2.514.706-3.689-.288-1.206-1.146-2.099-2.326-2.729l-.942 1.765c.849.453 1.207.946 1.322 1.428.123.513.028 1.248-.525 2.284l1.765.941Zm-1.62-6.418c-1.14-.608-2.328-.773-3.488-.352l.682 1.88c.526-.191 1.122-.159 1.864.237l.942-1.765Zm-3.488-.352c-1.156.419-2.036 1.358-2.701 2.604l1.765.942c.528-.989 1.087-1.473 1.618-1.666l-.682-1.88Zm-2.701 2.604-.729 1.368 1.764.941.73-1.367-1.765-.942Zm-.729 1.368c-.677 1.268-.98 2.539-.683 3.737l1.941-.48c-.134-.543-.041-1.29.506-2.316l-1.764-.941Zm-.683 3.737c.296 1.198 1.095 2.093 2.235 2.701l.941-1.764c-.743-.396-1.1-.874-1.235-1.417l-1.941.48Zm2.235 2.701c1.184.632 2.407.842 3.573.4 1.134-.431 2.005-1.402 2.683-2.672l-1.765-.942c-.561 1.053-1.127 1.554-1.628 1.744-.468.178-1.077.157-1.922-.294l-.941 1.764Zm6.256-2.272.73-1.368-1.765-.941-.73 1.367 1.765.942ZM55.5157 122.061l.18.983.0088-.001.0087-.002-.1975-.98Zm4.0891-6.603-.9866.163.0017.011.0019.01.983-.184Zm-2.2701-3.818.7056-.708-.0036-.004-.702.712Zm-3.0084-2.965-.7061.708.0041.004.702-.712Zm-3.3169-5.68-.9867.163.0018.01.9849-.173Zm4.2131-9.5962-.5787-.8156-.0078.0056-.0077.0057.5942.8043Zm4.4884-1.4023-.0077-1.0001-.0093.0002.017.9999Zm9.7259 4.3954-.6559.7548.0075.0066.0076.0063.6408-.7677Zm3.5024 3.7391.6619.749.6908-.61-.5517-.7381-.801.5991Zm-3.0003 2.649-.7849.62.6547.829.7921-.699-.6619-.75Zm-3.1319-3.3708-.6798.7338.0112.01.0115.01.6571-.7538Zm-7.4761-3.1951.1477.989.0051-.0008-.1528-.9882Zm-3.8067 6.0729-.9854.17.0015.009.0018.009.9821-.188Zm2.2966 3.662-.7139.7.0059.006.006.006.702-.712Zm3.0084 2.965-.702.712.0002.001.7018-.713Zm-3.4494 17.088.3002.954.0089-.003-.3091-.951Zm-12.767-4.431-.6571.754.0084.007.0085.007.6402-.768Zm-3.8936-4.174-.6675-.745-.6942.623.5722.736.7895-.614Zm2.9327-2.629.7928-.61-.6573-.855-.803.72.6675.745Zm3.3907 3.736-.6623.749.004.003.6583-.752Zm3.0878 3.347c1.9649 1.048 3.8388 1.509 5.5653 1.193l-.3601-1.967c-1.1206.205-2.5231-.062-4.2638-.991l-.9414 1.765Zm5.5828 1.19c1.7921-.361 3.1504-1.52 4.091-3.283l-1.7646-.941c-.7225 1.354-1.6351 2.044-2.7215 2.263l.3951 1.961Zm4.091-3.283c.7809-1.464 1.0664-2.969.7836-4.483l-1.966.367c.1875 1.004.0176 2.051-.5822 3.175l1.7646.941Zm.7872-4.463c-.2525-1.526-1.1608-2.979-2.5511-4.363l-1.4112 1.417c1.225 1.22 1.8302 2.312 1.9891 3.272l1.9732-.326Zm-2.5547-4.367-3.0084-2.965-1.404 1.424 3.0085 2.965 1.4039-1.424Zm-3.0043-2.961c-1.7798-1.775-2.7475-3.491-3.0381-5.145l-1.9698.346c.3834 2.182 1.6269 4.252 3.5957 6.215l1.4122-1.416Zm-3.0363-5.135c-.2804-1.698.0345-3.4504 1.014-5.2864l-1.7645-.9415c-1.1544 2.1637-1.5851 4.3589-1.2228 6.5539l1.9733-.326Zm1.014-5.2864c.7542-1.4137 1.6925-2.5194 2.8066-3.3425l-1.1884-1.6086c-1.3803 1.0197-2.5051 2.3647-3.3827 4.0096l1.7645.9415Zm2.791-3.3312c1.0964-.7779 2.3923-1.192 3.9268-1.2181l-.034-1.9997c-1.8969.0323-3.5933.5531-5.0501 1.5866l1.1573 1.6312Zm3.9175-1.218c1.5236-.0118 3.3172.4906 5.4037 1.6037l.9414-1.7646c-2.2661-1.209-4.3939-1.8542-6.3605-1.839l.0154 1.9999Zm5.4037 1.6037c1.2512.6676 2.471 1.5147 3.6586 2.5466l1.3118-1.5097c-1.2906-1.1213-2.6333-2.0569-4.029-2.8015l-.9414 1.7646Zm3.6737 2.5595c1.1891.9925 2.3039 2.1804 3.3422 3.5694l1.602-1.1971c-1.1221-1.5012-2.3423-2.8057-3.6627-3.9078l-1.2815 1.5355Zm3.4813 2.2214-3.0004 2.65 1.3239 1.499 3.0003-2.65-1.3238-1.499Zm-1.5536 2.78c-1.1095-1.406-2.1955-2.5782-3.2597-3.5057l-1.3141 1.5077c.9474.826 1.9492 1.901 3.0041 3.237l1.5697-1.239Zm-3.237-3.4853c-1.0161-.9416-2.0803-1.7139-3.194-2.308l-.9415 1.7645c.945.5042 1.8708 1.1715 2.776 2.0108l1.3595-1.4673Zm-3.194-2.308c-1.7886-.9543-3.5092-1.3901-5.1146-1.1419l.3056 1.9765c1.03-.1592 2.3034.0955 3.8675.9299l.9415-1.7645Zm-5.1095-1.1427c-1.6986.2537-2.9815 1.4371-3.9143 3.1856l1.7645.9414c.7617-1.4278 1.5986-2.0225 2.4452-2.1489l-.2954-1.9781Zm-3.9143 3.1856c-.7012 1.3143-.9671 2.6734-.7301 4.0464l1.9708-.34c-.1509-.874.0012-1.785.5238-2.765l-1.7645-.9414Zm-.7268 4.0644c.2644 1.38 1.1908 2.774 2.5648 4.174l1.4278-1.4c-1.2689-1.294-1.8735-2.342-2.0284-3.15l-1.9642.376Zm2.5767 4.186 3.0084 2.965 1.404-1.424-3.0085-2.965-1.4039 1.424Zm3.0086 2.966c1.7764 1.75 2.7636 3.51 3.075 5.276.3102 1.759-.0296 3.64-1.116 5.676l1.7646.942c1.2515-2.346 1.7241-4.679 1.321-6.965-.4017-2.279-1.6532-4.396-3.641-6.354l-1.4036 1.425Zm1.959 10.952c-1.2469 2.337-2.9215 3.792-5.0156 4.472l.6181 1.902c2.659-.864 4.7103-2.711 6.1621-5.432l-1.7646-.942Zm-5.0067 4.469c-1.9939.627-4.5713.225-7.8437-1.521l-.9414 1.765c3.4919 1.863 6.6575 2.522 9.3854 1.664l-.6003-1.908Zm-7.8437-1.521c-1.3137-.701-2.6416-1.607-3.983-2.724l-1.2804 1.536c1.4309 1.192 2.8713 2.179 4.322 2.953l.9414-1.765Zm-3.9662-2.71c-1.2859-1.121-2.5402-2.464-3.7611-4.034l-1.579 1.228c1.2885 1.657 2.6299 3.097 4.026 4.314l1.3141-1.508Zm-3.8831-2.676 2.9327-2.629-1.335-1.489-2.9327 2.629 1.335 1.489Zm1.4725-2.764c1.2086 1.572 2.3818 2.869 3.5211 3.876l1.3246-1.499c-1.0173-.899-2.1045-2.093-3.2602-3.596l-1.5855 1.219Zm3.5251 3.879c1.1636 1.018 2.4124 1.884 3.7461 2.595l.9414-1.765c-1.1956-.637-2.319-1.415-3.3709-2.335l-1.3166 1.505Zm34.6814 21.819-.9842-.176-.1288.716.6423.343.4707-.883Zm1.4688-8.17.9842.177.1288-.717-.6423-.342-.4707.882Zm-11.3816-6.072.4707-.882-.6423-.343-.5234.506.695.719Zm-5.9684 5.77-.4707.882.6423.343.5234-.506-.695-.719Zm-3.7497-2.001-.6888-.725-1.0049.955 1.223.652.4707-.882Zm25.9739-24.679.4707-.882-.6365-.34-.523.497.6888.725Zm3.6174 1.93.9859.167.1204-.71-.6356-.339-.4707.882Zm-5.9901 35.341-.4707.882 1.2247.653.232-1.368-.986-.167Zm-6.4909-23.525.6937.72.0068-.006-.7005-.714Zm-4.43 4.267-.6938-.72-.9911.955 1.2142.648.4707-.883Zm9.1317 4.872-.4707.882 1.2142.648.241-1.355-.9845-.175Zm1.0773-6.056-.9821-.188-.0025.013.9846.175Zm2.075-10.793.982.188.6052-3.148-2.2878 2.246.7006.714Zm-4.3492 29.293 1.4688-8.17-1.9685-.354-1.4687 8.171 1.9684.353Zm.9553-9.229-11.3816-6.072-.9414 1.764 11.3816 6.072.9414-1.764Zm-12.5473-5.909-5.9684 5.77 1.39 1.438 5.9685-5.77-1.3901-1.438Zm-4.8027 5.606-3.7497-2-.9414 1.764 3.7497 2.001.9414-1.765Zm-3.5316-.393 25.9739-24.679-1.3776-1.45-25.9739 24.679 1.3776 1.45Zm24.8144-24.521 3.6174 1.93.9414-1.765-3.6174-1.93-.9414 1.765Zm3.1021.88-5.99 35.341 1.9719.334 5.99-35.341-1.9719-.334Zm-4.5334 34.625-3.9703-2.118-.9414 1.765 3.9703 2.118.9414-1.765Zm-7.6554-23.362-4.43 4.267 1.3875 1.44 4.43-4.267-1.3875-1.44Zm-4.2069 5.87 9.1317 4.871.9414-1.764-9.1317-4.872-.9414 1.765Zm10.5869 4.164 1.0773-6.055-1.9691-.351-1.0773 6.056 1.9691.35Zm1.0748-6.042 2.075-10.794-1.9641-.377-2.075 10.794 1.9641.377Zm.3924-11.696-7.854 7.711 1.4011 1.427 7.854-7.711-1.4011-1.427Zm23.2635 40.123.882.471.471-.883-.882-.47-.471.882Zm-1.906 3.573-.471.883.882.47.471-.882-.882-.471Zm-16.4109-8.755-.8823-.471-.4707.883.8823.47.4707-.882Zm16.0039-29.998.471-.882-.882-.471-.471.883.882.47Zm3.838 2.048.882.471.471-.883-.882-.47-.471.882ZM96.3894 144.66l-.8823-.47-.4707.882.8823.471.4707-.883Zm11.6906 6.237-1.907 3.574 1.765.941 1.906-3.573-1.764-.942Zm-.554 3.162-16.4102-8.755-.9414 1.764 16.4106 8.756.941-1.765Zm-15.9986-7.402 16.0036-29.998-1.764-.941-16.0042 29.997 1.7646.942Zm14.6506-29.586 3.838 2.047.942-1.764-3.838-2.048-.942 1.765Zm3.427.694L95.5071 144.19l1.7646.941 14.0973-26.424-1.764-.942Zm-13.6863 27.778 12.5723 6.707.942-1.764-12.5729-6.708-.9414 1.765Zm35.7123 17.919.882.471.471-.883-.883-.47-.47.882Zm-1.907 3.573-.47.882.882.471.471-.882-.883-.471Zm-16.763-8.943-.882-.471-.471.882.882.471.471-.882Zm16.004-29.998.471-.882-.883-.471-.47.882.882.471Zm16.322 8.708.883.471.47-.883-.882-.47-.471.882Zm-1.93 3.617-.47.883.882.47.471-.882-.883-.471Zm-12.484-6.66.471-.882-.883-.471-.47.882.882.471Zm-5.013 9.396-.882-.471-.471.883.882.47.471-.882Zm11.161 5.955.882.47.471-.882-.882-.471-.471.883Zm-1.93 3.617-.471.882.883.471.47-.882-.882-.471Zm-11.161-5.954.471-.883-.883-.47-.47.882.882.471Zm-5.225 9.793-.882-.471-.471.883.882.47.471-.882Zm12.043 6.425-1.906 3.573 1.765.942 1.906-3.573-1.765-.942Zm-.553 3.162-16.763-8.944-.942 1.765 16.764 8.943.941-1.764Zm-16.352-7.591 16.004-29.997-1.764-.942-16.004 29.998 1.764.941Zm14.651-29.586 16.323 8.708.941-1.764-16.322-8.708-.942 1.764Zm15.911 7.355-1.93 3.618 1.765.941 1.93-3.617-1.765-.942Zm-.577 3.206-12.484-6.66-.942 1.764 12.485 6.661.941-1.765Zm-13.837-6.249-5.013 9.396 1.764.942 5.013-9.396-1.764-.942Zm-4.602 10.749 11.161 5.955.942-1.765-11.161-5.954-.942 1.764Zm10.75 4.602-1.93 3.617 1.764.942 1.93-3.618-1.764-.941Zm-.577 3.206-11.161-5.955-.942 1.765 11.161 5.954.942-1.764Zm-12.514-5.543-5.225 9.793 1.764.942 5.225-9.794-1.764-.941Zm-4.814 11.146 12.926 6.896.941-1.764-12.925-6.896-.942 1.764Z\"\n    />\n  </svg>\n</template>\n","import { render } from \"./Sale.vue?vue&type=template&id=f4ab1b6e\"\nconst script = {}\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <div class=\"canvasWrapper\">\n    <div class=\"sale\" ref=\"saleRef\">\n      <Sale />\n    </div>\n    <div class=\"cloudWrapper\">\n      <Cloud v-for=\"cloud in 8\" :key=\"cloud.id\" class=\"cloud\" />\n    </div>\n    <canvas ref=\"canvasRef\" />\n    <House @click=\"createBalloon\" />\n  </div>\n</template>\n\n<script setup>\nimport { ref, onMounted } from \"vue\";\nimport gsap from \"gsap\";\nimport House from \"@/components/House.vue\";\nimport Cloud from \"@/components/Cloud.vue\";\nimport Sale from \"@/components/Sale.vue\";\n\nconst saleRef = ref();\nconst canvasRef = ref();\nlet ctx;\nlet shapes = [];\n\nconst randomPosition = () => {\n  const x = Math.random() * (canvasRef.value.width * 0.9);\n  const y =\n    Math.random() * (canvasRef.value.height / 2) + canvasRef.value.height / 2;\n\n  return { x, y };\n};\nconst setShape = (type, x, y) => {\n  const minWidth = canvasRef.value.width * 0.1; // 화면 폭의 10%\n  const maxWidth = canvasRef.value.width * 0.15; // 화면 폭의 15%\n  const minHeight = canvasRef.value.height * 0.1; // 화면 높이의 10%\n  const maxHeight = canvasRef.value.height * 0.15; // 화면 높이의 15%\n\n  let width, height;\n\n  if (type === \"circle\") {\n    const maxRadius = Math.min(maxWidth, maxHeight) / 2;\n    const radius =\n      Math.floor(Math.random() * (maxRadius - minWidth + 1)) + minWidth;\n    width = radius * 2;\n    height = radius * 2;\n  } else {\n    width = Math.floor(Math.random() * (maxWidth - minWidth + 1)) + minWidth;\n    height =\n      Math.floor(Math.random() * (maxHeight - minHeight + 1)) + minHeight;\n  }\n\n  return {\n    type,\n    x,\n    y,\n    width,\n    height,\n  };\n};\n\nconst createShape = (shape) => {\n  ctx.beginPath();\n\n  if (shape.type === \"square\") {\n    ctx.rect(shape.x, shape.y, shape.width, shape.height);\n  } else if (shape.type === \"circle\") {\n    ctx.arc(\n      shape.x + shape.width / 2,\n      shape.y + shape.height / 2,\n      shape.width / 2,\n      0,\n      2 * Math.PI\n    );\n  } else if (shape.type === \"triangle\") {\n    ctx.moveTo(shape.x + shape.width / 2, shape.y);\n    ctx.lineTo(shape.x, shape.y + shape.height);\n    ctx.lineTo(shape.x + shape.width, shape.y + shape.height);\n    ctx.closePath();\n  } else if (shape.type === \"heart\") {\n    ctx.moveTo(shape.x + shape.width / 2, shape.y + shape.height / 4);\n    ctx.bezierCurveTo(\n      shape.x + shape.width / 4,\n      shape.y,\n      shape.x,\n      shape.y + shape.height / 4,\n      shape.x,\n      shape.y + shape.height / 2\n    );\n    ctx.bezierCurveTo(\n      shape.x,\n      shape.y + (shape.height * 3) / 4,\n      shape.x + shape.width / 4,\n      shape.y + shape.height,\n      shape.x + shape.width / 2,\n      shape.y + shape.height\n    );\n    ctx.bezierCurveTo(\n      shape.x + (shape.width * 3) / 4,\n      shape.y + shape.height,\n      shape.x + shape.width,\n      shape.y + (shape.height * 3) / 4,\n      shape.x + shape.width,\n      shape.y + shape.height / 2\n    );\n    ctx.bezierCurveTo(\n      shape.x + shape.width,\n      shape.y + shape.height / 4,\n      shape.x + (shape.width * 3) / 4,\n      shape.y,\n      shape.x + shape.width / 2,\n      shape.y + shape.height / 4\n    );\n  } else if (shape.type === \"star\") {\n    const outerRadius = shape.width / 2;\n    const innerRadius = outerRadius * 0.4;\n    const centerX = shape.x + shape.width / 2;\n    const centerY = shape.y + shape.height / 2;\n\n    let angle = Math.PI / 2;\n    const step = (Math.PI * 2) / (5 * 2);\n    ctx.moveTo(centerX, centerY + outerRadius);\n\n    for (let i = 0; i < 5 * 2; i++) {\n      const radius = i % 2 === 0 ? outerRadius : innerRadius;\n      const x = centerX + Math.cos(angle) * radius;\n      const y = centerY + Math.sin(angle) * radius;\n      ctx.lineTo(x, y);\n\n      angle += step;\n    }\n\n    ctx.closePath();\n  }\n\n  // 랜덤 색\n  if (!shape.color) {\n    shape.color = `#${Math.floor(Math.random() * 16777215).toString(16)}`;\n  }\n  ctx.fillStyle = shape.color;\n  ctx.fill();\n  ctx.stroke();\n\n  // 풍선 끈\n  ctx.beginPath();\n  ctx.moveTo(shape.x + shape.width / 2, shape.y + shape.height);\n  ctx.lineTo(canvasRef.value.width / 2, canvasRef.value.height * 0.8);\n  ctx.stroke();\n};\n\n// 충돌 감지\nconst detectCollision = (shape1, shape2) => {\n  const dx = shape1.x + shape1.width / 2 - (shape2.x + shape2.width / 2);\n  const dy = shape1.y + shape1.height / 2 - (shape2.y + shape2.height / 2);\n  const distance = Math.sqrt(dx * dx + dy * dy);\n  const minDistance = shape1.width / 4 + shape2.width / 4;\n\n  return distance < minDistance;\n};\nconst handleCollision = (shape1, shape2) => {\n  const dx = shape1.x + shape1.width / 2 - (shape2.x + shape2.width / 2);\n  const dy = shape1.y + shape1.height / 2 - (shape2.y + shape2.height / 2);\n  const angle = Math.atan2(dy, dx);\n  const totalRadius = shape1.width / 2 + shape2.width / 2;\n\n  const shape1NewX =\n    shape2.x + shape2.width / 2 + Math.cos(angle) * totalRadius;\n  const shape1NewY =\n    shape2.y + shape2.height / 2 + Math.sin(angle) * totalRadius;\n\n  const distanceVelocity =\n    Math.sqrt(\n      Math.pow(shape1.x - shape1NewX, 2) + Math.pow(shape1.y - shape1NewY, 2)\n    ) * 0.1;\n\n  if (!shape1.isAnimate) {\n    gsap.to(shape1, {\n      x: shape1NewX - shape1.width / 2,\n      y: shape1NewY - shape1.height / 2,\n      duration: distanceVelocity,\n    });\n  }\n};\n\n// 풍선 추가\nconst createBalloon = () => {\n  const shapeTypes = [\"square\", \"circle\", \"triangle\", \"heart\", \"star\"];\n  const { x, y } = randomPosition();\n  const type = shapeTypes[Math.floor(Math.random() * shapeTypes.length)];\n  const shape = setShape(type, x, y);\n  shapes.push(shape);\n\n  shape.isAnimate = true;\n  gsap.to(shape, {\n    y: gsap.utils.random(50, canvasRef.value.height / 3),\n    duration: 3,\n    ease: \"power2\",\n    onComplete: () => {\n      gsap.to(shape, {\n        y: \"+=20\",\n        ease: \"none\",\n        duration: 2,\n        yoyo: true,\n        repeat: -1,\n      });\n      shape.isAnimate = false;\n    },\n  });\n  gsap.from(shape, {\n    width: 0,\n    height: 0,\n    ease: \"power2\",\n    duration: 3.5,\n  });\n};\n\n// 풍선 제거\nconst deleteBalloon = (e) => {\n  const canvasRect = canvasRef.value.getBoundingClientRect();\n  const clickX = e.clientX - canvasRect.left;\n  const clickY = e.clientY - canvasRect.top;\n\n  let clickedBalloon = null;\n\n  shapes.forEach((shape) => {\n    if (\n      clickX >= shape.x &&\n      clickX <= shape.x + shape.width &&\n      clickY >= shape.y &&\n      clickY <= shape.y + shape.height &&\n      !shape.isAnimate\n    ) {\n      shape.isAnimate = true;\n      if (!clickedBalloon || shape.y < clickedBalloon.y) {\n        clickedBalloon = shape;\n      }\n    }\n  });\n\n  if (clickedBalloon) {\n    gsap.killTweensOf(clickedBalloon);\n    gsap.to(clickedBalloon, {\n      y: -canvasRef.value.height / 2,\n      duration: 2,\n      ease: \"power3.in\",\n      onComplete: () => {\n        shapes = shapes.filter((s) => s !== clickedBalloon);\n      },\n    });\n  }\n};\n\nconst animate = () => {\n  ctx.clearRect(0, 0, canvasRef.value.width, canvasRef.value.height);\n\n  shapes.forEach((shape, index) => {\n    createShape(shape);\n\n    // 충돌 감지\n    for (let i = index + 1; i < shapes.length; i++) {\n      const otherShape = shapes[i];\n      if (detectCollision(shape, otherShape)) {\n        handleCollision(shape, otherShape);\n      }\n    }\n  });\n\n  requestAnimationFrame(animate);\n};\n\nconst onResize = () => {\n  canvasRef.value.width = window.innerWidth;\n  canvasRef.value.height = window.innerHeight;\n  shapes = [];\n};\n\nonMounted(() => {\n  ctx = canvasRef.value.getContext(\"2d\");\n\n  onResize();\n  animate();\n\n  gsap.to(saleRef.value, {\n    scale: 1.1,\n    transformOrigin: \"center center\",\n    yoyo: true,\n    ease: \"power1.inOut\",\n    repeat: -1,\n    duration: 1,\n  });\n\n  canvasRef.value.addEventListener(\"click\", deleteBalloon);\n  window.addEventListener(\"resize\", onResize);\n});\n</script>\n\n<style lang=\"scss\">\nbody {\n  margin: 0;\n}\n\n.canvasWrapper {\n  position: relative;\n  width: 100%;\n  height: 100vh;\n  overflow: hidden;\n  background: linear-gradient(0deg, rgb(0, 183, 255) 30%, rgb(0, 255, 255) 90%);\n  .sale {\n    position: fixed;\n    top: 55%;\n    left: 70%;\n    transform: translate(-30%, -45%);\n    height: 60%;\n    z-index: 1;\n  }\n  canvas {\n    width: 100%;\n    height: 100%;\n  }\n\n  $cloudCount: 8;\n  .cloudWrapper {\n    position: absolute;\n    width: 100%;\n    height: 100%;\n    z-index: 0;\n    pointer-events: none;\n    .cloud {\n      position: absolute;\n      @for $i from 1 through $cloudCount {\n        &:nth-child(#{$i}) {\n          @if $i % 2 == 0 {\n            transform: scaleX(-1);\n          }\n\n          $cloudPositions: (\n            (\n              bottom: 0,\n              left: 20%,\n            ),\n            (\n              bottom: 0,\n              right: 20%,\n            ),\n            (\n              bottom: 10%,\n              left: 5%,\n            ),\n            (\n              bottom: 10%,\n              right: 5%,\n            ),\n            (\n              bottom: 12%,\n              left: 30%,\n            ),\n            (\n              bottom: 20%,\n              right: 30%,\n            ),\n            (\n              bottom: 30%,\n              left: 20%,\n            ),\n            (\n              bottom: 30%,\n              right: 20%,\n            )\n          );\n          $position: nth($cloudPositions, $i);\n          bottom: map-get($position, bottom);\n          left: map-get($position, left);\n          right: map-get($position, right);\n\n          @if $i > 4 {\n            transform: scale(0.5);\n          }\n        }\n      }\n    }\n  }\n}\n</style>\n","import script from \"./App.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./App.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./App.vue?vue&type=style&index=0&id=5533f5f5&lang=scss\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { createApp } from \"vue\";\nimport App from \"./App.vue\";\n\ncreateApp(App).mount(\"#app\");\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t143: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = function(chunkId) { return installedChunks[chunkId] === 0; };\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = function(parentChunkLoadingFunction, data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some(function(id) { return installedChunks[id] !== 0; })) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkbaton\"] = self[\"webpackChunkbaton\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [998], function() { return __webpack_require__(9389); })\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["class","xmlns","fill","viewBox","_hoisted_2","_createElementBlock","_hoisted_1","_hoisted_4","script","__exports__","render","_hoisted_7","saleRef","ref","canvasRef","ctx","shapes","randomPosition","x","Math","random","value","width","y","height","setShape","type","minWidth","maxWidth","minHeight","maxHeight","maxRadius","min","radius","floor","createShape","shape","beginPath","rect","arc","PI","moveTo","lineTo","closePath","bezierCurveTo","outerRadius","innerRadius","centerX","centerY","angle","step","i","cos","sin","color","toString","fillStyle","stroke","detectCollision","shape1","shape2","dx","dy","distance","sqrt","minDistance","handleCollision","atan2","totalRadius","shape1NewX","shape1NewY","distanceVelocity","pow","isAnimate","gsap","to","duration","createBalloon","shapeTypes","length","push","utils","ease","onComplete","yoyo","repeat","from","deleteBalloon","e","canvasRect","getBoundingClientRect","clickX","clientX","left","clickY","clientY","top","clickedBalloon","forEach","killTweensOf","filter","s","animate","clearRect","index","otherShape","requestAnimationFrame","onResize","window","innerWidth","innerHeight","onMounted","getContext","scale","transformOrigin","addEventListener","createApp","App","mount","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__","call","m","deferred","O","result","chunkIds","fn","priority","notFulfilled","Infinity","fulfilled","j","Object","keys","every","key","splice","r","n","getter","__esModule","d","a","definition","o","defineProperty","enumerable","get","g","globalThis","this","Function","obj","prop","prototype","hasOwnProperty","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","data","moreModules","runtime","some","id","chunkLoadingGlobal","self","bind","__webpack_exports__"],"sourceRoot":""}